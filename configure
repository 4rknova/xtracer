#!/bin/sh

#=============== CUSTOMIZATION ==================

SW_TITLE="xtracer"
SW_PACKAGE="xtracer"
SW_DESCRIPTION="Photorealistic Renderer"

MAN_SECTION=""

PATH_PREFIX=/usr/local
PATH_SRC=src
PATH_LIB=libs
PATH_SCN=scene
PATH_BIN=bin
PATH_OBJ=$PATH_BIN/obj
PATH_MAN=man

FLAGS_XTR="-fopenmp -Wall -Wno-unknown-pragmas -ffast-math -funsafe-math-optimizations"
DEP_DLIB=""

#================================================

if [ -z "$MAN_SECTION" ]; then MAN_SECTION="1"; fi

PATH_PREFIX="`echo $PATH_PREFIX | sed -e 's/ /_/g'`"
PATH_SRC="`echo $PATH_SRC | sed -e 's/ /_/g'`"
PATH_BIN="`echo $PATH_BIN | sed -e 's/ /_/g'`"
PATH_OBJ="`echo $PATH_OBJ | sed -e 's/ /_/g'`"
PATH_MAN="`echo $PATH_MAN | sed -e 's/ /_/g'`"

SW_TITLE="`echo $SW_TITLE | sed -e 's/ /_/g'`"
SW_PACKAGE="`echo $SW_PACKAGE | sed -e 's/ /_/g'`"
SW_SYMID="`echo $SW_TITLE | tr '[:lower:]' '[:upper:]'`"


# Options
FLAG_OMPLIB=no
FLAG_DBGSYM=no
FLAG_OPTSPD=yes

for arg; do
	case "$arg" in
		--prefix=*)
			value = `echo $arg | sed 's/--prefix = //'`
			PREFIX = ${value:-$prefix}
			;;

        --enable-opt)
			FLAG_OPTSPD = yes
			;;
        --disable-opt)
			FLAG_OPTSPD = no
			;;

		--enable-debug)
			FLAG_DBGSYM = yes
			;;
		--disable-debug)
			FLAG_DBGSYM = no
			;;

		--help)
			echo 'Usage: ./configure [options]'
			echo 'Options:'
			echo '  --prefix=<path>: installation path (default: /usr/local)'
			echo '  --enable-opt: Enable speed optimizations (default)'
			echo '  --disable-opt: Disable speed optimizations'
			echo '  --enable-debug: Include debugging symbols'
			echo '  --disable-debug: Ommit debugging symbols (default)'
			echo 'All invalid options are silently ignored'
			exit 0
			;;
	esac
done

echo "Configuring $SW_PACKAGE.."
echo "- installation path prefix: $PATH_PREFIX"
echo "- optimize for speed: $FLAG_OPTSPD"
echo "- include debugging symbols: $FLAG_DBGSYM"

echo "Creating makefile..."
echo "# $SW_PACKAGE" > Makefile
echo "# Auto-generated makefile" >> Makefile
echo >> Makefile

echo "SW_SYMID   = $SW_SYMID" >> Makefile
echo "SW_TITLE   = $SW_TITLE" >> Makefile
echo "SW_PACKAGE = $SW_PACKAGE" >> Makefile
echo >> Makefile

echo "PATH_PREFIX = $PATH_PREFIX" >> Makefile
echo "PATH_SCN = $PATH_SCN" >> Makefile
echo "PATH_SRC = $PATH_SRC" >> Makefile
echo "PATH_LIB = $PATH_LIB" >> Makefile
echo "PATH_BIN = $PATH_BIN" >> Makefile
echo "PATH_OBJ = $PATH_OBJ" >> Makefile
echo "PATH_MAN = $PATH_MAN" >> Makefile
echo >> Makefile

echo "MAN_SECTION = $MAN_SECTION" >> Makefile
echo >> Makefile

if [ "$DBGSPD" = 'yes' ]; then
	echo 'FLAGS_DBG = -g' >> Makefile
fi

if [ "$FLAG_OPTSPD" = 'yes' ]; then
	echo 'FLAGS_OPT = -O3' >> Makefile
fi

echo >> Makefile

echo 'EXT_STATIC = a' >> Makefile

echo >> Makefile

echo "DEP_DLIB = $DEP_DLIB" >> Makefile
echo >> Makefile

echo "FLAGS_XTR = $FLAGS_XTR" >> Makefile
echo >> Makefile

cat Makefile.in >> Makefile

echo 'Creating pkg-config file ...'

echo "Name: $SW_TITLE" > $SW_TITLE.pc
echo "Description: $SW_DESCRIPTION" >> $SW_TITLE.pc
#echo "Version: $SW_VERSION" >> $SW_TITLE.pc
echo "Cflags: -I$PATH_PREFIX/include/$SW_TITLE" >> $SW_TITLE.pc
echo "Libs: -L$PATH_PREFIX/lib -l$SW_TITLE" >> $SW_TITLE.pc

echo "Setting up the directory structure..."
if [ ! -d "$PATH_BIN" ]; then
    mkdir $PATH_BIN
fi

if [ ! -d "$PATH_MAN" ]; then
	mkdir $PATH_MAN
fi

echo "Configuration completed." 
echo "Type make (or gmake) to build."
