CC  = @echo "compiling [c  ]: $<"; gcc
CXX = @echo "compiling [c++]: $<"; g++
LD  = @echo "linking $@ ..."; g++

SOURCE_H   = $(wildcard $(PATH_SRC)/*.h)
SOURCE_HPP = $(wildcard $(PATH_SRC)/*.hpp)
SOURCE_INL = $(wildcard $(PATH_SRC)/*.inl)
SOURCE_TML = $(wildcard $(PATH_SRC)/*.tml)
SOURCE_C   = $(wildcard $(PATH_SRC)/*.c)
SOURCE_CC  = $(wildcard $(PATH_SRC)/*.cc)
SOURCE_CPP = $(wildcard $(PATH_SRC)/*.cpp)

SOURCE_API = $(SOURCE_H) $(SOURCE_HPP) $(SOURCE_INL) $(SOURCE_TML)

BINOBJ_C   = $(addprefix $(PATH_OBJ)/, $(notdir $(SOURCE_C:.c=.o)))
BINOBJ_CC  = $(addprefix $(PATH_OBJ)/, $(notdir $(SOURCE_CC:.cc=.o)))
BINOBJ_CPP = $(addprefix $(PATH_OBJ)/, $(notdir $(SOURCE_CPP:.cpp=.o)))
BINOBJ	 = $(BINOBJ_C) $(BINOBJ_CC) $(BINOBJ_CPP)

BIN = $(PATH_BIN)/$(SW_PACKAGE)

MAN = $(PATH_MAN)/$(SW_TITLE).$(MAN_SECTION)

FLAGS_WARNLV = -Wall
FLAGS_INCLSN = -I/usr/local/include -I$(PATH_SRC)
FLAGS_PREPRC = -D'$(SW_SYMID)_VERSION="$(SW_VERSION)"'
FLAGS_COMMON = $(FLAGS_OPT) $(FLAGS_DBG) $(FLAGS_WARNLV) $(FLAGS_INCLSN) $(FLAGS_PREPRC) $(FLAGS_XTR)
FLAGS_LD  = -lgomp -ldl
FLAGS_CC  = $(FLAGS_COMMON) -std=c89 -Wall
FLAGS_CXX = $(FLAGS_COMMON) -ansi -pedantic

# TARGETS
.PHONY: all
all: $(BIN)

.PHONY: dirtree
dirtree:
	mkdir -p $(PATH_BIN)
	mkdir -p $(PATH_OBJ)

$(PATH_OBJ)/%.o: $(PATH_SRC)/%.c
	$(CC) -c $(FLAGS_CC) -o $@ $< $(DEP_DLIB)

$(PATH_OBJ)/%.o: $(PATH_SRC)/%.cc
	$(CXX) -c $(FLAGS_CXX) -o $@ $<

$(PATH_OBJ)/%.o: $(PATH_SRC)/%.cpp
	$(CXX) -c $(FLAGS_CXX) -o $@ $<

$(BIN): dirtree $(BINOBJ)
	$(LD) $(FLAGS_LD) $(FLAGS_CXX) $(BINOBJ) $(DEP_DLIB) -o $@

.PHONY: install
install: all
	install -m 755 $(BIN) $(PATH_PREFIX)/$(BIN)
	if test -f $(MAN); then install -D -c -m 444 $(MAN) $(PATH_PREFIX)/share/man/man$(MAN_SECTION)/$(SW_TITLE).$(MAN_SECTION); fi

.PHONY: uninstall
uninstall:
	rm -f $(PATH_PREFIX)/$(BIN)
	if test -f man; then rm -f $(PATH_PREFIX)/share/man/man$(MAN_SECTION)/$(SW_TITLE).$(MAN_SECTION); fi

.PHONY: man-preview
man-preview:
	clear && nroff -Tascii -man "$(PATH_MAN)/$(SW_TITLE).$(MAN_SECTION)" | col -x | less -c

.PHONY: test
test:

.PHONY: clean
clean:
	rm -rf $(BINOBJ)

.PHONY: clean-all
clean-all: clean
	rm -f Makefile $(SW_TITLE).pc $(BIN)
	rm -rf $(PATH_BIN)
